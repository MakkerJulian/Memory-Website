Lees het artikel over webtoegankelijkheid (of hier als bestand) en beantwoord de volgende vragen in een korte alinea per vraag.

A. Probeer je voor te stellen dat je niet (meer) kunt zien, maar wel je favoriete site wilt bezoeken. 
Welke van de in het artikel genoemde frustratie over (on)toegankelijkheid lijkt jou het meest belemmerend? En waarom?

Antwoord A: De unlabeled buttons en links lijken mij de meeste frustratie opleveren. 
Dit komt doordat navigeren over een website zonder te snappen waar de buttons zijn en wat ze doen bijna onmogelijk is.
Dit zou er voor zorgen dat blinden of visually impaired people cant use certain websites because they dont have a way to navigate.

B. Kom je als ziend persoon ook wel eens dingen tegen die jou belemmeren in het correct gebruiken van een website? 
Beschrijf kort wat je tegenkomt en hoe jij dit beter zou willen doen.

Antwoord B: Als een website een scrollbalk heeft maar die niet nodig heeft. 
Bijvoorbeeld: een website die net te veel content heeft voor zijn kijkhoogte en daarom een scrollbalk invoegt voor 1 of 2 regels tekst.
Nog erger is als de height variabele net fout is ingevult waardoor er niets extras meer op de pagina staat maar er wel een scrollbalk is ingevoegd voor een paar pixels.
De andere kant van dezelfde munt is als de scrollbalk vergeten wordt en daarom de onderste helft van letters niet meer zichtbaar is.

Lees het artikel over responsive web design (of hier als bestand) en beantwoord de volgende vraag in een korte alinea.
Er zijn twee benaderingen als het gaat om responsive web design: mobile-first of desktop-first. 
Niet iedereen is het eens over welke de voorkeur zou moeten hebben, alhoewel de één wellicht populairder is dan de ander. 
Dit artikel betoogt een duidelijke voorkeur. 
Ben jij het met de schrijver van het artikel eens? 
Leg uit waarom je het hier wel of niet mee eens bent met behulp van een argument dat in het artikel wordt genoemd.

Antwoord opdracht 2: De schrijver is een voorstander voor mobile-first coding maar wij hebben een andere mening.
Wij vinden dat de beste manier van de development is om desktop en mobile tegelijk te doen per component. 
Zo kan je er voor zorgen dat het bepaalde component waar je nu mee bezig bent voor desktop en mobile toegankelijk is.
Als deze methode bij alle componenten wordt vastgehouden is het uiteindelijk niet veel werk om het eindproduct ook desktop en mobile toegankelijk te maken.